
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: gitrepos.syn.tools
spec:
  group: syn.tools
  names:
    kind: GitRepo
    listKind: GitRepoList
    plural: gitrepos
    singular: gitrepo
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.displayName
      name: Display Name
      type: string
    - jsonPath: .spec.repoName
      name: Repo Name
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GitRepo is the Schema for the gitrepos API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GitRepoSpec defines the desired state of GitRepo
            properties:
              apiSecretRef:
                description: APISecretRef reference to secret containing connection
                  information
                properties:
                  name:
                    description: Name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: Namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
              deletionPolicy:
                description: 'DeletionPolicy defines how the external resources should
                  be treated upon CR deletion. Retain: will not delete any external
                  resources Delete: will delete the external resources Archive: will
                  archive the external resources, if it supports that'
                enum:
                - Delete
                - Retain
                - Archive
                type: string
              deployKeys:
                additionalProperties:
                  description: DeployKey defines an SSH key to be used for git operations.
                  properties:
                    key:
                      description: Key is the actual key
                      type: string
                    type:
                      description: Type defines what type the key is (rsa, ed25519,
                        etc...)
                      type: string
                    writeAccess:
                      description: WriteAccess if the key has RW access or not
                      type: boolean
                  type: object
                description: DeployKeys optional list of SSH deploy keys. If not set,
                  not deploy keys will be configured
                type: object
              displayName:
                description: DisplayName of Git repository
                type: string
              path:
                description: Path to Git repository
                type: string
              repoName:
                description: RepoName name of Git repository
                type: string
              repoType:
                description: RepoType specifies if a repo should be managed by the
                  git controller. A value of 'unmanaged' means it's not manged by
                  the controller
                enum:
                - auto
                - unmanaged
                type: string
              templateFiles:
                additionalProperties:
                  type: string
                description: TemplateFiles is a list of files that should be pushed
                  to the repository after its creation.
                type: object
              tenantRef:
                description: TenantRef references the tenant this repo belongs to
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
            type: object
          status:
            description: GitRepoStatus defines the observed state of GitRepo
            properties:
              hostKeys:
                description: SSH HostKeys of the git server
                type: string
              phase:
                description: Updated by Operator with current phase. The GitPhase
                  enum will be used for application logic as using it directly would
                  only print an integer.
                type: string
              type:
                description: Type autodiscovered Git repo type. Same behaviour for
                  the enum as with the Phase.
                type: string
              url:
                description: URL computed Git repository URL
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
